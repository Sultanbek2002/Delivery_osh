plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}


def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'


android {
    namespace "dostavka.arendabook.com.greenlifeosh" // Сохраняем из last-back3
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {

        applicationId "dostavka.arendabook.com.greenlifeosh"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"  // Поддержка всех необходимых ABI
        }
    }

    signingConfigs {
        release {
            keyAlias 'my-key-alias'
            keyPassword 'sultan'
            storeFile file('../../my-release-key.jks')  // Путь к ключу
            storePassword 'sultan'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false  // Минификация отключена
            shrinkResources false  // Уменьшение ресурсов отключено

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {}

